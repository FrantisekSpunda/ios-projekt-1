#!/bin/bash

export POSIXLY_CORRECT=yes

user=""
command=""
logs=()
datetime_before="999999999999"
datetime_after=""
currency=""
datetime_regex='^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}$'
local_xtf_profit=20

function validate_datetime() {
  if ! [[ "$1" =~ $datetime_regex ]]; then
    echo "Date and time are not in right format: $1 (YYYY-MM-DD HH:MM:SS)."
    exit
  fi
}

function help() {
  clear
  echo
  echo "XTF is script for showing and filtering stocks informations from log file."
  echo "Usage: xtf [-h|--help] [FILTER] [COMMAND] USERNAME [LOG FILES]"
  echo ""
  echo "List of COMMANDs:"
  echo "  list               | list of filtered logs"
  echo "  list-currency      | list of currencies in filtered logs"
  echo "  status             | balance of the account grouped by currencies"
  echo "  profit             | balance of the account with calculated income"
  echo "List of FILTERs:"
  echo "  -a DATETIME        | show logs only after DATETIME (must be in format YYYY-MM-DD HH:MM:SS)"
  echo "  -b DATETIME        | show logs only before DATETIME (must be in format YYYY-MM-DD HH:MM:SS)"
  echo "  -c CURRENCY        | show logs only with CURRENCY (must be in format YYYY-MM-DD HH:MM:SS)"
  echo "Others:"
  echo "  -h | --help"
  exit
}

# load all arguments
while [[ "$#" -gt 0 ]]; do
  case "$1" in
  # Filters
  -a)
    datetime_after="$2"
    val idate_datetime "$2"
    shift
    ;;
  -b)
    datetime_before="$2"
    validate_datetime "$2"
    shift
    ;;
  -c)
    currency+=" $2"
    shift
    ;;
  -h | --help)
    help
    ;;
  # Commands
  list) command="list" ;;
  list-currency) command="listCurrency" ;;
  status) command="status" ;;
  profit) command="profit" ;;
  # Username and logs
  *)
    if [[ -z "$user" ]]; then
      user="$1"
    else
      logs+=("$1")
    fi
    ;;
  esac
  shift
done

if [ ${#logs[@]} -eq 0 ]; then
  echo "No input files with logs."
  exit
fi

if ! [ -z "${XTF_PROFIT+x}" ] && [ "$XTF_PROFIT" -ge 0 ]; then
  local_xtf_profit=$XTF_PROFIT
fi

for log in "${logs[@]}"; do
  if [[ "$log" == *.gz ]]; then
    zcat "$log"
  else
    cat "$log"
  fi
done | awk -F ';' -v user="$user" -v datetime_before="$datetime_before" -v datetime_after="$datetime_after" -v currency="$currency" -v command="$command" -v xtf_profit="$local_xtf_profit" '
    BEGIN {
      split(currency, currency_list, " ")
    }

    user == $1 && datetime_before >= $2 && datetime_after <= $2 {
      may_be=0
      if(currency_list[1] == "") may_be=1
      else
        for (i in currency_list)
          if (currency_list[i] == $3) {
              may_be=1
              break
          }

      if(may_be==1) {
        if (command == "listCurrency") { currencies[$3] = 1 }
        else if (command == "list" || !command) { print }
        else if (command == "status" || command == "profit") {
          currencies[$3] = (currencies[$3] || 0) + $4
        }
      }
    }

    END {
      for (c in currencies) {
        if (command == "listCurrency")
          print c
        else if (command == "status")
          print c " : " currencies[c]
        else if (command == "profit")
          if(currencies[c] > 0)
            print c " : " currencies[c] * ((xtf_profit / 100) + 1)
          else
            print c " : " currencies[c] 
      }
    }
  '
